<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFrameworks>net9.0;net8.0;net6.0;netstandard2.0</TargetFrameworks>
	</PropertyGroup>
	<PropertyGroup>
		<TargetFrameworks Condition=" '$(OS)' == 'Windows_NT'">net48;net472;$(TargetFrameworks);</TargetFrameworks>
	</PropertyGroup>
	<PropertyGroup>
		<Nullable>enable</Nullable>
		<LangVersion>latest</LangVersion>
		<IsPackable>true</IsPackable>
		<AssemblyVersion>0.0.1</AssemblyVersion>
		<AssemblyFileVersion>0.0.1</AssemblyFileVersion>
		<PackageId>Transmitly.ChannelProvider.SendGrid</PackageId>
		<Product>Transmitly</Product>
		<ProductName>Transmit.ly</ProductName>
		<Company>Code Impressions</Company>
		<Title>Transmit.ly SendGrid Channel Provider</Title>
		<Description>A channel provider for the Transmitly communications library.</Description>
		<Copyright>Copyright (c) Code Impressions, LLC</Copyright>
		<Authors>Code Impressions</Authors>
		<PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
		<PackageIcon>icon-dark.png</PackageIcon>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<RepositoryUrl>https://github.com/transmitly/transmitly-channel-provider-sendgrid.git</RepositoryUrl>
		<PackageTags>email;sendgrid;channel provider; transmitly</PackageTags>

		<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);IncludeProjectReferencesWithPrivateAssetsAttributeInPackage</TargetsForTfmSpecificBuildOutput>
		<TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);IncludeReferenceAssemblies</TargetsForTfmSpecificContentInPackage>
		<BuildProjectReferences Condition="'$(NoBuild)' == 'true'">false</BuildProjectReferences>
		<!-- Removed the .xml from DefaultAllowedOutputExtensionsInPackageBuildOutputFolder -->
		<DefaultAllowedOutputExtensionsInPackageBuildOutputFolder>.dll; .exe; .winmd; .json; .pri</DefaultAllowedOutputExtensionsInPackageBuildOutputFolder>

		<!-- Generate documentation file -->
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<!-- Generate symbols package -->
		<IncludeSymbols>true</IncludeSymbols>
	</PropertyGroup>

	<ItemGroup>
	  <None Include="..\..\assets\icon-dark.png">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	  <None Include="..\..\README.md">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	</ItemGroup>
	<ItemGroup>
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All" />
		<PackageReference Include="PolySharp" Version="1.15.0" PrivateAssets="All" />
		<PackageReference Include="Transmitly" Version="0.2.1" />
	</ItemGroup>
	<ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
		<Reference Include="System.Net.Http" />
	</ItemGroup>
	<ItemGroup>
	  <ProjectReference Include="..\Transmitly.ChannelProvider.SendGrid.Configuration\Transmitly.ChannelProvider.SendGrid.Configuration.csproj" PrivateAssets="all" />
	  <ProjectReference Include="..\Transmitly.ChannelProvider.SendGrid.Sdk\Transmitly.ChannelProvider.SendGrid.Sdk.csproj" PrivateAssets="all"/>
	</ItemGroup>
	<!-- Add ProjectReferences output which are flagged as PrivateAssets="all" into the package. -->
	<Target Name="IncludeProjectReferencesWithPrivateAssetsAttributeInPackage"
			Condition="'@(ProjectReference)' != '' and @(ProjectReference->AnyHaveMetadataValue('PrivateAssets', 'all'))"
			DependsOnTargets="BuildOnlySettings;ResolveReferences">
		<ItemGroup>
			<_projectReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('PrivateAssets', 'all'))" />

			<BuildOutputInPackage Include="@(_projectReferenceCopyLocalPaths)"
								  TargetPath="%(_projectReferenceCopyLocalPaths.DestinationSubDirectory)" />
			<TfmSpecificDebugSymbolsFile Include="@(_projectReferenceCopyLocalPaths->WithMetadataValue('Extension', '.pdb'))"
										 TargetPath="%(_projectReferenceCopyLocalPaths.DestinationSubDirectory)"
										 TargetFramework="$(TargetFramework)"
										 Condition="'$(IncludeSymbols)' == 'true'" />

			<!-- Remove symbol from the non symbol package. -->
			<BuildOutputInPackage Remove="@(_projectReferenceCopyLocalPaths->WithMetadataValue('Extension', '.pdb'))" />
			<BuildOutputInPackage Remove="@(_projectReferenceCopyLocalPaths->WithMetadataValue('Extension', '.xml'))" />
		</ItemGroup>
	</Target>

	<!-- Add a ref folder to the package which only exposes the library (and its documentation file) so that the
       referenced class library doesn't get exposed. -->
	<Target Name="IncludeReferenceAssemblies" AfterTargets="Build">
		<ItemGroup>
			<TfmSpecificPackageFile Include="$(OutputPath)$(TargetFramework)\$(AssemblyName).dll"
									 PackagePath="ref/$(TargetFramework)"
									 Condition="Exists('$(OutputPath)$(TargetFramework)\$(AssemblyName).dll')" />
			<TfmSpecificPackageFile Include="$(OutputPath)$(TargetFramework)\$(AssemblyName).xml"
									 PackagePath="ref/$(TargetFramework)"
									 Condition="'$(GenerateDocumentationFile)' == 'true' and Exists('$(OutputPath)$(TargetFramework)\$(AssemblyName).xml')" />
		</ItemGroup>
	</Target>
</Project>